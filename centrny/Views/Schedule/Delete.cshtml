@model centrny.Models.Schedule

@{
    ViewData["Title"] = "Delete Schedule";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card shadow-lg border-0 border-danger">
                <div class="card-header bg-gradient-danger text-white">
                    <h2 class="mb-0">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        Delete Schedule
                    </h2>
                </div>
                <div class="card-body p-4">
                    <div class="alert alert-danger mb-4">
                        <div class="d-flex align-items-center">
                            <i class="fas fa-exclamation-circle fa-3x me-3"></i>
                            <div>
                                <h5 class="alert-heading mb-2">Warning: This action cannot be undone!</h5>
                                <p class="mb-0">
                                    Are you sure you want to delete this schedule? This will permanently remove all related data.
                                </p>
                            </div>
                        </div>
                    </div>

                    <div class="schedule-summary bg-light p-4 rounded mb-4">
                        <div class="row">
                            <div class="col-md-6">
                                <h4 class="text-danger mb-3">
                                    <i class="fas fa-calendar-times me-2"></i>
                                    @Model.ScheduleName
                                </h4>

                                <div class="detail-item">
                                    <dt>Schedule Code</dt>
                                    <dd class="text-muted">#@Model.ScheduleCode</dd>
                                </div>

                                <div class="detail-item">
                                    <dt>Day of Week</dt>
                                    <dd>
                                        <span class="badge bg-secondary">@Html.DisplayFor(model => model.DayOfWeek)</span>
                                    </dd>
                                </div>

                                @if (Model.StartTime.HasValue && Model.EndTime.HasValue)
                                {
                                    <div class="detail-item">
                                        <dt>Time</dt>
                                        <dd>
                                            <i class="fas fa-clock text-muted me-1"></i>
                                            @Model.StartTime.Value.ToString("HH:mm") - @Model.EndTime.Value.ToString("HH:mm")
                                        </dd>
                                    </div>
                                }

                                @if (Model.ScheduleAmount.HasValue)
                                {
                                    <div class="detail-item">
                                        <dt>Amount</dt>
                                        <dd class="text-success fw-bold">$@Model.ScheduleAmount.Value.ToString("F2")</dd>
                                    </div>
                                }
                            </div>

                            <div class="col-md-6">
                                @if (Model.HallCodeNavigation != null)
                                {
                                    <div class="detail-item">
                                        <dt>Hall</dt>
                                        <dd>
                                            <i class="fas fa-door-open text-muted me-1"></i>
                                            @Html.DisplayFor(model => model.HallCodeNavigation.HallName)
                                        </dd>
                                    </div>
                                }

                                @if (Model.RootCodeNavigation != null)
                                {
                                    <div class="detail-item">
                                        <dt>Root/Center</dt>
                                        <dd>
                                            <i class="fas fa-building text-muted me-1"></i>
                                            @Html.DisplayFor(model => model.RootCodeNavigation.RootName)
                                            @if (Model.RootCodeNavigation.IsCenter)
                                            {
                                                <span class="badge bg-primary ms-2">Center</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-warning ms-2">Teacher</span>
                                            }
                                        </dd>
                                    </div>
                                }

                                @if (Model.TeacherCodeNavigation != null)
                                {
                                    <div class="detail-item">
                                        <dt>Teacher</dt>
                                        <dd>
                                            <i class="fas fa-chalkboard-teacher text-muted me-1"></i>
                                            @Html.DisplayFor(model => model.TeacherCodeNavigation.TeacherName)
                                        </dd>
                                    </div>
                                }

                                @if (Model.SubjectCodeNavigation != null)
                                {
                                    <div class="detail-item">
                                        <dt>Subject</dt>
                                        <dd>
                                            <i class="fas fa-book text-muted me-1"></i>
                                            @Html.DisplayFor(model => model.SubjectCodeNavigation.SubjectName)
                                        </dd>
                                    </div>
                                }

                                @if (Model.EduYearCodeNavigation != null)
                                {
                                    <div class="detail-item">
                                        <dt>Educational Year</dt>
                                        <dd>
                                            <i class="fas fa-graduation-cap text-muted me-1"></i>
                                            @Html.DisplayFor(model => model.EduYearCodeNavigation.EduName)
                                        </dd>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>

                    @if (Model.Classes.Any() || Model.Attends.Any())
                    {
                        <div class="alert alert-warning mb-4">
                            <h6 class="alert-heading">
                                <i class="fas fa-exclamation-triangle me-2"></i>
                                Impact Analysis
                            </h6>
                            <p>Deleting this schedule will also affect:</p>
                            <ul class="mb-0">
                                @if (Model.Classes.Any())
                                {
                                    <li><strong>@Model.Classes.Count class(es)</strong> associated with this schedule will be orphaned</li>
                                }
                                @if (Model.Attends.Any())
                                {
                                    <li><strong>@Model.Attends.Count attendance record(s)</strong> linked to this schedule will be orphaned</li>
                                }
                            </ul>
                        </div>
                    }

                    <div class="confirmation-section bg-danger bg-opacity-10 p-3 rounded mb-4">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="confirmDelete" required>
                            <label class="form-check-label text-danger fw-bold" for="confirmDelete">
                                I understand this action cannot be undone and confirm I want to delete this schedule.
                            </label>
                        </div>
                    </div>

                    <form asp-action="Delete" method="post" id="deleteForm">
                        <input type="hidden" asp-for="ScheduleCode" />

                        <div class="d-flex gap-3 justify-content-end">
                            <a asp-action="Details" asp-route-id="@Model.ScheduleCode" class="btn btn-outline-secondary btn-lg px-4">
                                <i class="fas fa-arrow-left me-2"></i>
                                Cancel
                            </a>
                            <a asp-action="Calendar" class="btn btn-primary btn-lg px-4">
                                <i class="fas fa-calendar me-2"></i>
                                Back to Calendar
                            </a>
                            <button type="submit" class="btn btn-danger btn-lg px-4" id="deleteBtn" disabled>
                                <i class="fas fa-trash me-2"></i>
                                Delete Schedule
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .bg-gradient-danger {
        background: linear-gradient(135deg, #ff6b6b 0%, #ee5a52 100%);
    }

    .card {
        border-radius: 15px;
        overflow: hidden;
    }

    .border-danger {
        border: 2px solid #dc3545 !important;
    }

    .schedule-summary {
        border-radius: 10px;
        border-left: 4px solid #dc3545;
    }

    .detail-item {
        margin-bottom: 1rem;
        padding-bottom: 0.5rem;
        border-bottom: 1px solid #e9ecef;
    }

        .detail-item:last-child {
            border-bottom: none;
            margin-bottom: 0;
        }

        .detail-item dt {
            font-weight: 600;
            color: #495057;
            font-size: 0.85rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            margin-bottom: 0.25rem;
        }

        .detail-item dd {
            margin-bottom: 0;
            color: #212529;
        }

    .btn {
        border-radius: 10px;
        font-weight: 500;
        transition: all 0.3s ease;
    }

        .btn:hover:not(:disabled) {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

    .confirmation-section {
        border: 2px dashed #dc3545;
    }

    .form-check-input:checked {
        background-color: #dc3545;
        border-color: #dc3545;
    }

    .alert {
        border-radius: 10px;
        border: none;
    }

    .badge {
        border-radius: 8px;
    }
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const confirmCheckbox = document.getElementById('confirmDelete');
            const deleteBtn = document.getElementById('deleteBtn');
            const deleteForm = document.getElementById('deleteForm');

            // Enable/disable delete button based on confirmation checkbox
            confirmCheckbox.addEventListener('change', function() {
                deleteBtn.disabled = !this.checked;
            });

            // Add confirmation dialog on form submission
            deleteForm.addEventListener('submit', function(e) {
                if (!confirmCheckbox.checked) {
                    e.preventDefault();
                    alert('Please confirm that you understand this action cannot be undone.');
                    return false;
                }

                // Double confirmation
                if (!confirm('Are you absolutely sure you want to delete this schedule? This action cannot be undone.')) {
                    e.preventDefault();
                    return false;
                }

                // Update button state
                deleteBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Deleting...';
                deleteBtn.disabled = true;
            });

            // Prevent accidental page closure
            window.addEventListener('beforeunload', function(e) {
                if (confirmCheckbox.checked) {
                    e.preventDefault();
                    e.returnValue = '';
                }
            });
        });
    </script>
}

@section Styles {
    <style>
        /* Additional custom styles for delete page */
        .alert-danger .fas {
            color: #721c24;
        }

        .text-danger {
            color: #dc3545 !important;
        }

        /* Pulse animation for warning elements */
        @@keyframes pulse {
            0% {
                transform: scale(1);
            }

            50% {
                transform: scale(1.05);
            }

            100% {
                transform: scale(1);
            }
        }

        .alert-danger {
            animation: pulse 2s infinite;
        }
    </style>
}