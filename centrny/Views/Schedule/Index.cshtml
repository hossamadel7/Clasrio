﻿@@model List<centrny.Models.Schedule>

@{
    ViewData["Title"] = "Schedule List";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" />

<div class="schedule-page">
    <div class="container-fluid page-container">
        <div class="row justify-content-center">
            <div class="col-12">
                <div class="card main-card">
                    <div class="card-header">
                        <div class="d-flex justify-content-between align-items-center">
                            <h2>
                                <i class="fas fa-calendar-alt me-2"></i>
                                Schedule Management
                            </h2>
                            <div class="btn-group" role="group">
                                <button type="button" class="btn-modern" data-bs-toggle="modal" data-bs-target="#scheduleModal">
                                    <i class="fas fa-plus me-1"></i> Add Schedule
                                </button>
                                <a href="@Url.Action("Calendar")" class="btn-modern btn-info">
                                    <i class="fas fa-calendar me-1"></i> Calendar View
                                </a>
                            </div>
                        </div>
                    </div>

                    @if (ViewBag.CurrentUserRootCode != null)
                    {
                        <div class="controls-section">
                            <div class="user-info">
                                <i class="fas @(ViewBag.IsCenter ? "fa-building" : "fa-user-circle") me-2"></i>
                                Showing schedules for: <strong>@ViewBag.UserRootName</strong>
                                (@(ViewBag.IsCenter ? "Center" : "Teacher") - Root: @ViewBag.CurrentUserRootCode)
                                @if (ViewBag.BranchName != null)
                                {
                                    <span> at <strong>@ViewBag.BranchName</strong></span>
                                }
                                | Total: <strong>@ViewBag.ScheduleCount</strong> schedules
                            </div>
                            <button type="button" class="btn-modern btn-info" onclick="refreshList()">
                                <i class="fas fa-sync-alt"></i> Refresh
                            </button>
                        </div>
                    }

                    <div class="table-container">
                        @if (Model != null && Model.Count > 0)
                        {
                            <div class="table-responsive">
                                <table class="table table-hover schedule-table">
                                    <thead>
                                        <tr>
                                            <th>Schedule Name</th>
                                            <th>Day</th>
                                            <th>Time</th>
                                            <th>Type</th>
                                            <th>Hall</th>
                                            @if (ViewBag.IsTeacher == true)
                                            {
                                                <th>Center / Branch</th>
                                            }
                                            else
                                            {
                                                <th>Teacher / Subject</th>
                                            }
                                            <th>Amount</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model)
                                        {
                                            <tr>
                                                <td>
                                                    <strong>@item.ScheduleName</strong>
                                                </td>
                                                <td>
                                                    <span class="badge badge-modern badge-day">
                                                        @item.DayOfWeek
                                                    </span>
                                                </td>
                                                <td>
                                                    @if (item.StartTime.HasValue && item.EndTime.HasValue)
                                                    {
                                                        <small class="text-muted">
                                                            @item.StartTime.Value.ToString("hh:mm tt") - @item.EndTime.Value.ToString("hh:mm tt")
                                                        </small>
                                                    }
                                                </td>
                                                <td>
                                                    @if (item.RootCodeNavigation?.IsCenter == true)
                                                    {
                                                        <span class="badge badge-modern badge-center">
                                                            <i class="fas fa-building me-1"></i>Center
                                                        </span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-modern badge-teacher">
                                                            <i class="fas fa-user me-1"></i>Teacher
                                                        </span>
                                                    }
                                                </td>
                                                <td>
                                                    @(item.HallCodeNavigation?.HallName ?? "")
                                                </td>
                                                <td>
                                                    @if (ViewBag.IsTeacher == true)
                                                    {
                                                        <!-- Show Center/Branch for teacher users -->
                                                        <div>
                                                            @if (item.CenterCodeNavigation != null)
                                                            {
                                                                <span class="badge badge-modern badge-center mb-1">
                                                                    <i class="fas fa-building me-1"></i>@item.CenterCodeNavigation.CenterName
                                                                </span>
                                                            }
                                                            @if (item.BranchCodeNavigation != null)
                                                            {
                                                                <br>
                                                                <span class="badge badge-modern badge-branch">
                                                                    <i class="fas fa-map-marker-alt me-1"></i>@item.BranchCodeNavigation.BranchName
                                                                </span>
                                                            }
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <!-- Show Teacher/Subject for center users -->
                                                        <div>
                                                            @if (item.TeacherCodeNavigation != null)
                                                            {
                                                                <span class="badge badge-modern badge-teacher mb-1">
                                                                    <i class="fas fa-user me-1"></i>@item.TeacherCodeNavigation.TeacherName
                                                                </span>
                                                            }
                                                            @if (item.SubjectCodeNavigation != null)
                                                            {
                                                                <br>
                                                                <span class="badge badge-modern badge-subject">
                                                                    <i class="fas fa-book me-1"></i>@item.SubjectCodeNavigation.SubjectName
                                                                </span>
                                                            }
                                                        </div>
                                                    }
                                                </td>
                                                <td>
                                                    @if (item.ScheduleAmount.HasValue)
                                                    {
                                                        <span class="text-success fw-bold">
                                                            $@item.ScheduleAmount.Value.ToString("F2")
                                                        </span>
                                                    }
                                                </td>
                                                <td>
                                                    <div class="btn-group-actions">
                                                        <button type="button" class="btn-action btn-view"
                                                                onclick="showScheduleDetails(@item.ScheduleCode)"
                                                                title="View Details">
                                                            <i class="fas fa-eye"></i>
                                                        </button>
                                                        <button type="button" class="btn-action btn-edit"
                                                                onclick="editSchedule(@item.ScheduleCode)"
                                                                title="Edit">
                                                            <i class="fas fa-edit"></i>
                                                        </button>
                                                        <button type="button" class="btn-action btn-delete"
                                                                onclick="deleteSchedule(@item.ScheduleCode)"
                                                                title="Delete">
                                                            <i class="fas fa-trash"></i>
                                                        </button>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="empty-state">
                                <i class="fas fa-calendar-times"></i>
                                <h4>No Schedules Found</h4>
                                <p>Get started by creating your first schedule.</p>
                                <button type="button" class="btn-modern" data-bs-toggle="modal" data-bs-target="#scheduleModal">
                                    <i class="fas fa-plus me-2"></i> Create New Schedule
                                </button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modals Section -->
@if (ViewBag.CurrentUserRootCode != null)
{
    <!-- Main Schedule Modal (Create/Edit) -->
    <div class="modal fade schedule-modal" id="scheduleModal" tabindex="-1">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header" id="scheduleModalHeader">
                    <h5 class="modal-title" id="scheduleModalTitle">
                        <i class="fas fa-calendar-plus me-2"></i>Add New Schedule
                        @if (ViewBag.UserRootName != null && ViewBag.BranchName != null)
                        {
                            <small class="text-muted">for @ViewBag.UserRootName - @ViewBag.BranchName</small>
                        }
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div id="scheduleForm">
                        <!-- User context info in form -->
                        @if (ViewBag.CurrentUserRootCode != null)
                        {
                            <div class="alert alert-info mb-3">
                                <i class="fas fa-info-circle me-2"></i>
                                <strong>Note:</strong> This schedule will be created for <strong>@ViewBag.UserRootName</strong>
                                (@(ViewBag.IsCenter ? "Center" : "Teacher") - Root Code: @ViewBag.CurrentUserRootCode)
                                @if (ViewBag.BranchName != null)
                                {
                                    <span> at <strong>@ViewBag.BranchName</strong></span>
                                }
                                @if (ViewBag.IsTeacher)
                                {
                                    <br>
                                    <small class="text-muted">Teacher will be automatically assigned to your account.</small>
                                }
                                else
                                {
                                    <br>
                                    <small class="text-muted">Center will be automatically assigned. Select branch and teacher for this schedule.</small>
                                }
                            </div>
                        }

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label">Schedule Name *</label>
                                <input type="text" class="form-control" id="scheduleName" required placeholder="Enter schedule name">
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label">Day of Week *</label>
                                <select class="form-select" id="dayOfWeek" required>
                                    <option value="">Select Day</option>
                                    <option value="Sunday">Sunday</option>
                                    <option value="Monday">Monday</option>
                                    <option value="Tuesday">Tuesday</option>
                                    <option value="Wednesday">Wednesday</option>
                                    <option value="Thursday">Thursday</option>
                                    <option value="Friday">Friday</option>
                                    <option value="Saturday">Saturday</option>
                                </select>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label">Start Time *</label>
                                <input type="time" class="form-control" id="startTime" required>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label">End Time *</label>
                                <input type="time" class="form-control" id="endTime" required>
                            </div>
                        </div>

                        <!-- Root is hidden and auto-set -->
                        <input type="hidden" id="rootCode" value="@ViewBag.CurrentUserRootCode">

                        <!-- Center and Branch dropdowns - NO CENTER FIELD FOR CENTER USERS -->
                        <div class="row">
                            @if (ViewBag.IsCenter == true)
                            {
                                <!-- For CENTER USERS: NO CENTER FIELD AT ALL, just hidden input -->
                                <input type="hidden" id="centerCode" value="@ViewBag.SingleCenterCode">
                                
                                <!-- Only show Branch and Educational Year for center users -->
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Branch</label>
                                    <select class="form-select" id="branchCode" onchange="loadHallsForBranch()">
                                        <option value="">Select Branch (Optional)</option>
                                        <!-- Branches will be loaded via JavaScript -->
                                    </select>
                                    <small class="text-muted">Select branch for this schedule</small>
                                </div>
                                
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Educational Year</label>
                                    <select class="form-select" id="eduYearCode">
                                        <option value="">Select Year (Optional)</option>
                                        @if (ViewData["EduYearCode"] != null)
                                        {
                                            @foreach (var item in (Microsoft.AspNetCore.Mvc.Rendering.SelectList)ViewData["EduYearCode"])
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        }
                                    </select>
                                </div>
                            }
                            else
                            {
                                <!-- For TEACHER USERS: Show center and branch fields -->
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Center</label>
                                    <select class="form-select" id="centerCode" onchange="loadBranchesForCenter()">
                                        <option value="">Select Center (Optional)</option>
                                        @if (ViewData["CenterCode"] != null)
                                        {
                                            @foreach (var item in (Microsoft.AspNetCore.Mvc.Rendering.SelectList)ViewData["CenterCode"])
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Branch</label>
                                    <select class="form-select" id="branchCode" onchange="loadHallsForBranch()">
                                        <option value="">Select Center First</option>
                                    </select>
                                </div>
                            }
                        </div>

                        <!-- Halls row - separate for both user types -->
                        <div class="row">
                            @if (ViewBag.IsCenter == true)
                            {
                                <!-- For CENTER USERS: Hall -->
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Hall</label>
                                    <select class="form-select" id="hallCode">
                                        <option value="">Select Branch First</option>
                                    </select>
                                    <small class="text-muted">Select branch first to see available halls</small>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <!-- Empty space for center users -->
                                </div>
                            }
                            else
                            {
                                <!-- For TEACHER USERS: Hall and Educational Year -->
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Hall</label>
                                    <select class="form-select" id="hallCode">
                                        <option value="">Select Branch First</option>
                                    </select>
                                    <small class="text-muted">Select branch first to see available halls</small>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Educational Year</label>
                                    <select class="form-select" id="eduYearCode">
                                        <option value="">Select Year (Optional)</option>
                                        @if (ViewData["EduYearCode"] != null)
                                        {
                                            @foreach (var item in (Microsoft.AspNetCore.Mvc.Rendering.SelectList)ViewData["EduYearCode"])
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        }
                                    </select>
                                </div>
                            }
                        </div>

                        <!-- Teacher and Year section - UPDATED LOGIC -->
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label">Year *</label>
                                <select class="form-select" id="yearCode" required onchange="loadSubjectsForTeacher()">
                                    <option value="">Select Year</option>
                                    @if (ViewData["YearCode"] != null)
                                    {
                                        @foreach (var item in (Microsoft.AspNetCore.Mvc.Rendering.SelectList)ViewData["YearCode"])
                                        {
                                            <option value="@item.Value">@item.Text</option>
                                        }
                                    }
                                </select>
                            </div>
                            
                            @if (ViewBag.IsCenter == true)
                            {
                                <!-- For CENTER USERS: Show teacher dropdown (required) -->
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Teacher *</label>
                                    <select class="form-select" id="teacherCode" required onchange="loadSubjectsForTeacher()">
                                        <option value="">Select Teacher</option>
                                        @if (ViewData["TeacherCode"] != null)
                                        {
                                            @foreach (var item in (Microsoft.AspNetCore.Mvc.Rendering.SelectList)ViewData["TeacherCode"])
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        }
                                        else
                                        {
                                            <option value="">No teachers data available</option>
                                        }
                                    </select>
                                </div>
                            }
                            else
                            {
                                <!-- For TEACHER USERS: Hide teacher dropdown, auto-assign -->
                                <input type="hidden" id="teacherCode" value="">
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Your Assignment</label>
                                    <input type="text" class="form-control" value="@ViewBag.UserRootName - @ViewBag.BranchName" readonly>
                                    <small class="text-muted">Your schedule will be assigned to this teacher account</small>
                                </div>
                            }
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label">Subject</label>
                                <select class="form-select" id="subjectCode">
                                    <option value="">Select Subject (Optional)</option>
                                    @if (ViewData["SubjectCode"] != null)
                                    {
                                        @foreach (var item in (Microsoft.AspNetCore.Mvc.Rendering.SelectList)ViewData["SubjectCode"])
                                        {
                                            <option value="@item.Value">@item.Text</option>
                                        }
                                    }
                                </select>
                                @if (ViewBag.IsTeacher)
                                {
                                    <small class="text-muted">Subjects available in your center/branch</small>
                                }
                                else
                                {
                                    <small class="text-muted">Available subjects will appear after selecting a teacher</small>
                                }
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label">Amount</label>
                                <input type="number" class="form-control" id="scheduleAmount" step="0.01" min="0" placeholder="0.00">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn-modern" id="saveScheduleBtn">
                        <i class="fas fa-save me-2"></i>Save Schedule
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Event Details Modal -->
    <div class="modal fade schedule-modal" id="eventDetailsModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-info-circle me-2"></i>Schedule Details
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div id="eventDetailsContent"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn-modern btn-warning" id="editEventBtn">
                        <i class="fas fa-edit me-2"></i>Edit
                    </button>
                    <button type="button" class="btn-modern btn-danger" id="deleteEventBtn">
                        <i class="fas fa-trash me-2"></i>Delete
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div class="modal fade schedule-modal" id="deleteConfirmModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-danger">
                    <h5 class="modal-title">
                        <i class="fas fa-exclamation-triangle me-2"></i>Confirm Delete
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="delete-warning">
                        <h5><i class="fas fa-exclamation-triangle me-2"></i>Warning</h5>
                        <p class="mb-0">This action cannot be undone. Are you sure you want to delete this schedule?</p>
                    </div>
                    <div class="schedule-summary" id="deleteScheduleSummary">
                        <!-- Schedule details will be inserted here -->
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn-modern btn-danger" id="confirmDeleteBtn">
                        <i class="fas fa-trash me-2"></i>Delete Schedule
                    </button>
                </div>
            </div>
        </div>
    </div>
}

<!-- Toast Container -->
<div class="toast-container"></div>

<!-- Anti-forgery token for AJAX requests -->
@Html.AntiForgeryToken()

<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>

<!-- Include the common schedule management JavaScript -->
<script src="~/js/schedule-common.js"></script>

<script>
    // Set up user context for the common script
    window.userContext = {
        currentUserRootCode: @Json.Serialize(ViewBag.CurrentUserRootCode),
        userRootName: @Json.Serialize(ViewBag.UserRootName ?? ""),
        isCenter: @Json.Serialize(ViewBag.IsCenter ?? false),
        isTeacher: @Json.Serialize(ViewBag.IsTeacher ?? false),
        branchName: @Json.Serialize(ViewBag.BranchName ?? ""),
        singleCenterCode: @Json.Serialize(ViewBag.SingleCenterCode ?? null),
        hasError: @Json.Serialize(ViewBag.Error != null)
    };

    // Index-specific functionality
    class IndexScheduleManager {
        constructor() {
            this.setupIndexSpecific();
        }

        setupIndexSpecific() {
            // Override the common manager's callbacks
            scheduleManager.onScheduleSaved = () => this.refreshList();
            scheduleManager.onScheduleDeleted = () => this.refreshList();
            
            // Load initial data
            this.loadAllSchedules();
        }

        async loadAllSchedules() {
            try {
                const response = await fetch('/Schedule/GetCalendarEvents?start=2000-01-01&end=2030-12-31');
                const events = await response.json();
                
                // Transform events to schedule format for the common manager
                scheduleManager.allSchedules = events.map(event => ({
                    scheduleCode: event.extendedProps.scheduleCode,
                    scheduleName: event.title,
                    dayOfWeek: event.extendedProps.dayOfWeek,
                    startTime: event.extendedProps.startTime,
                    endTime: event.extendedProps.endTime,
                    hallName: event.extendedProps.hallName,
                    hallCode: event.extendedProps.hallCode,
                    teacherName: event.extendedProps.teacherName,
                    teacherCode: event.extendedProps.teacherCode,
                    subjectName: event.extendedProps.subjectName,
                    subjectCode: event.extendedProps.subjectCode,
                    centerName: event.extendedProps.centerName,
                    centerCode: event.extendedProps.centerCode,
                    branchName: event.extendedProps.branchName,
                    branchCode: event.extendedProps.branchCode,
                    eduYearCode: event.extendedProps.eduYearCode,
                    yearCode: event.extendedProps.yearCode,
                    scheduleAmount: event.extendedProps.scheduleAmount,
                    isCenter: event.extendedProps.isCenter
                }));
                
                console.log('✅ Schedules loaded for Index view:', scheduleManager.allSchedules.length);
            } catch (error) {
                console.error('❌ Error loading schedules:', error);
                scheduleManager.showToast('Error', 'Failed to load schedules', 'error');
            }
        }

        refreshList() {
            console.log('🔄 Refreshing schedule list...');
            // Reload the page to refresh the server-rendered table
            window.location.reload();
        }
    }

    // Initialize Index-specific manager
    const indexManager = new IndexScheduleManager();

    // Index-specific global functions (for backward compatibility)
    window.refreshList = () => indexManager.refreshList();
</script>