@{
    ViewData["Title"] = "Schedule Calendar";
}

<link href='https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/6.1.8/index.min.css' rel='stylesheet' />
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" />
<link href="~/css/Calendar.css" rel="stylesheet" />
<div class="schedule-page">
    
        <div class="calendar-container">
            <!-- Page Header -->
            <div class="page-header">
                <h1><i class="fas fa-calendar-week me-3"></i>Weekly Schedule </h1>
                <p>Manage your recurring weekly schedules - no dates, just your weekly pattern</p>
            </div>

            @if (ViewBag.Error == null)
            {

                    <a href="@Url.Action("Index")" class="btn-modern btn-info">
                        <i class="fas fa-list"></i> List View
                    </a>

                @if (ViewBag.IsCenter == true && ViewBag.GroupBranchCode == null)
                {
                    <div class="row mb-3">
                        <div class="col-md-4">
                            <label for="branchFilter" class="form-label">Select Branch</label>
                            <select id="branchFilter" class="form-select" onchange="onBranchFilterChanged()">
                                <option value="">All Branches</option>
                                @if (ViewBag.Branches != null)
                                {
                                    foreach (dynamic branch in ViewBag.Branches)
                                    {
                                        <option value="@branch.value">@branch.text</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                }
      

                <!-- Custom Weekly Template Grid -->
                <div class="weekly-template-grid" style="position: relative;">
                    <div class="loading-overlay" id="initialLoader">
                        <div class="spinner"></div>
                    </div>

                    <div class="days-grid">
                        <div class="day-column" data-day="Sunday">
                            <div class="day-header">Sunday</div>
                            <div class="day-content" id="day-Sunday">
                                <div class="empty-day">No Classes</div>
                                <button class="add-schedule-btn" onclick="addScheduleForDay('Sunday')" title="Add schedule for Sunday">
                                    <i class="fas fa-plus"></i>
                                </button>
                            </div>
                        </div>

                        <div class="day-column" data-day="Monday">
                            <div class="day-header">Monday</div>
                            <div class="day-content" id="day-Monday">
                                <div class="empty-day">No schedules</div>
                                <button class="add-schedule-btn" onclick="addScheduleForDay('Monday')" title="Add schedule for Monday">
                                    <i class="fas fa-plus"></i>
                                </button>
                            </div>
                        </div>

                        <div class="day-column" data-day="Tuesday">
                            <div class="day-header">Tuesday</div>
                            <div class="day-content" id="day-Tuesday">
                                <div class="empty-day">No schedules</div>
                                <button class="add-schedule-btn" onclick="addScheduleForDay('Tuesday')" title="Add schedule for Tuesday">
                                    <i class="fas fa-plus"></i>
                                </button>
                            </div>
                        </div>

                        <div class="day-column" data-day="Wednesday">
                            <div class="day-header">Wednesday</div>
                            <div class="day-content" id="day-Wednesday">
                                <div class="empty-day">No schedules</div>
                                <button class="add-schedule-btn" onclick="addScheduleForDay('Wednesday')" title="Add schedule for Wednesday">
                                    <i class="fas fa-plus"></i>
                                </button>
                            </div>
                        </div>

                        <div class="day-column" data-day="Thursday">
                            <div class="day-header">Thursday</div>
                            <div class="day-content" id="day-Thursday">
                                <div class="empty-day">No schedules</div>
                                <button class="add-schedule-btn" onclick="addScheduleForDay('Thursday')" title="Add schedule for Thursday">
                                    <i class="fas fa-plus"></i>
                                </button>
                            </div>
                        </div>

                        <div class="day-column" data-day="Friday">
                            <div class="day-header">Friday</div>
                            <div class="day-content" id="day-Friday">
                                <div class="empty-day">No schedules</div>
                                <button class="add-schedule-btn" onclick="addScheduleForDay('Friday')" title="Add schedule for Friday">
                                    <i class="fas fa-plus"></i>
                                </button>
                            </div>
                        </div>

                        <div class="day-column" data-day="Saturday">
                            <div class="day-header">Saturday</div>
                            <div class="day-content" id="day-Saturday">
                                <div class="empty-day">No schedules</div>
                                <button class="add-schedule-btn" onclick="addScheduleForDay('Saturday')" title="Add schedule for Saturday">
                                    <i class="fas fa-plus"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
   
</div>

@if (ViewBag.Error == null)
{

    <!-- Floating Add Button -->
    <button class="floating-add-btn" data-bs-toggle="modal" data-bs-target="#scheduleModal" title="Add New Schedule">
        <i class="fas fa-plus"></i>
    </button>

    <!-- Main Schedule Modal (Create/Edit) -->
    <div class="modal fade schedule-modal" id="scheduleModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header" id="scheduleModalHeader">
                    <h5 class="modal-title" id="scheduleModalTitle">
                        <i class="fas fa-calendar-plus me-2"></i>Add New Schedule
                        @if (ViewBag.UserRootName != null)
                        {
                            <small class="text-muted">for @ViewBag.UserRootName</small>
                        }
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div id="scheduleForm">
                        <!-- User context info in form - Only for Center Users -->
                        @if (ViewBag.CurrentUserRootCode != null && ViewBag.IsCenter == true)
                        {
                            <div class="alert alert-info mb-3">
                                <i class="fas fa-info-circle me-2"></i>
                                <strong>Note:</strong> This schedule will be created for <strong>@ViewBag.UserRootName</strong>
                                (Center - Root Code: @ViewBag.CurrentUserRootCode)
                                @if (ViewBag.BranchName != null)
                                {
                                    <span> at <strong>@ViewBag.BranchName</strong></span>
                                }
                                <br>
                                <small class="text-muted">Center will be automatically assigned. Select branch and teacher for this schedule.</small>
                            </div>
                        }

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label">Schedule Name *</label>
                                <input type="text" class="form-control" id="scheduleName" required placeholder="Enter schedule name">
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label">Day of Week *</label>
                                <select class="form-select" id="dayOfWeek" required>
                                    <option value="">Select Day</option>
                                    <option value="Sunday">Sunday</option>
                                    <option value="Monday">Monday</option>
                                    <option value="Tuesday">Tuesday</option>
                                    <option value="Wednesday">Wednesday</option>
                                    <option value="Thursday">Thursday</option>
                                    <option value="Friday">Friday</option>
                                    <option value="Saturday">Saturday</option>
                                </select>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label">Start Time *</label>
                                <input type="time" class="form-control" id="startTime" required>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label">End Time *</label>
                                <input type="time" class="form-control" id="endTime" required>
                            </div>
                        </div>

                        <!-- Root is hidden and auto-set -->
                        <input type="hidden" id="rootCode" value="@ViewBag.CurrentUserRootCode">

                        <!-- Center and Branch dropdowns - Updated for both user types -->
                        <div class="row">
                            @if (ViewBag.IsCenter == true && ViewBag.GroupBranchCode == null)
                            {
                                <!-- For CENTER USERS with NO group/branch: show dropdown -->
                                <input type="hidden" id="centerCode" value="@ViewBag.SingleCenterCode">

                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Branch</label>
                                    <select class="form-select" id="branchCode" onchange="loadHallsForBranch()">
                                        <option value="">Select Branch (Optional)</option>
                                        <!-- Branches will be loaded via JavaScript -->
                                    </select>
                                    <small class="text-muted">Select branch for this schedule</small>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Educational Year</label>
                                    <select class="form-select" id="eduYearCode">
                                        <option value="">Select Year (Optional)</option>
                                        @if (ViewData["EduYearCode"] != null)
                                        {
                                            @foreach (var item in (Microsoft.AspNetCore.Mvc.Rendering.SelectList)ViewData["EduYearCode"])
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        }
                                    </select>
                                </div>
                            }
                            else if (ViewBag.IsCenter == true && ViewBag.GroupBranchCode != null)
                            {
                                <!-- For CENTER USERS with a group/branch: auto-assign branch, no dropdown -->
                                <input type="hidden" id="centerCode" value="@ViewBag.SingleCenterCode">
                                <input type="hidden" id="branchCode" name="branchCode" value="@ViewBag.GroupBranchCode" />
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Branch</label>
                                    <input type="text" class="form-control" value="@ViewBag.BranchName" disabled />
                                    <small class="text-muted">Branch is auto-assigned and cannot be changed</small>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Educational Year</label>
                                    <select class="form-select" id="eduYearCode">
                                        <option value="">Select Year (Optional)</option>
                                        @if (ViewData["EduYearCode"] != null)
                                        {
                                            @foreach (var item in (Microsoft.AspNetCore.Mvc.Rendering.SelectList)ViewData["EduYearCode"])
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        }
                                    </select>
                                </div>
                            }
                            else
                            {
                                <!-- For TEACHER USERS: Show center and branch fields -->
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Center</label>
                                    <select class="form-select" id="centerCode" onchange="loadBranchesForCenter()">
                                        <option value="">Select Center (Optional)</option>
                                        @if (ViewData["CenterCode"] != null)
                                        {
                                            @foreach (var item in (Microsoft.AspNetCore.Mvc.Rendering.SelectList)ViewData["CenterCode"])
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Branch</label>
                                    <select class="form-select" id="branchCode" onchange="loadHallsForBranch()">
                                        <option value="">Select Center First</option>
                                    </select>
                                </div>
                            }
                        </div>

                        <!-- Halls row - separate for both user types -->
                        <div class="row">
                            @if (ViewBag.IsCenter == true)
                            {
                                <!-- For CENTER USERS: Hall -->
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Hall</label>
                                    <select class="form-select" id="hallCode">
                                        <option value="">Select Branch First</option>
                                    </select>
                                    <small class="text-muted">Select branch first to see available halls</small>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <!-- Empty space for center users -->
                                </div>
                            }
                            else
                            {
                                <!-- For TEACHER USERS: Hide hall field completely, Educational Year only -->
                                <input type="hidden" id="hallCode" value="">
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Educational Year</label>
                                    <select class="form-select" id="eduYearCode">
                                        <option value="">Select Year (Optional)</option>
                                        @if (ViewData["EduYearCode"] != null)
                                        {
                                            @foreach (var item in (Microsoft.AspNetCore.Mvc.Rendering.SelectList)ViewData["EduYearCode"])
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <!-- Empty space for teacher users -->
                                </div>
                            }
                        </div>

                        <!-- Teacher and Year section - UPDATED LOGIC FOR TEACHER USERS -->
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label">Year *</label>
                                <select class="form-select" id="yearCode" required>
                                    <option value="">Select Year</option>
                                    @if (ViewBag.IsTeacher != true)
                                    {
                                        <!-- For CENTER USERS: Show all years normally -->
                                        @if (ViewData["YearCode"] != null)
                                        {
                                            @foreach (var item in (Microsoft.AspNetCore.Mvc.Rendering.SelectList)ViewData["YearCode"])
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        }
                                    }
                                    <!-- For TEACHER USERS: Years will be loaded via AJAX -->
                                </select>
                            </div>

                            @if (ViewBag.IsCenter == true)
                            {
                                <!-- For CENTER USERS: Show teacher dropdown (required) -->
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Teacher *</label>
                                    <select class="form-select" id="teacherCode" required onchange="loadSubjectsForTeacher()">
                                        <option value="">Select Teacher</option>
                                        @if (ViewData["TeacherCode"] != null)
                                        {
                                            @foreach (var item in (Microsoft.AspNetCore.Mvc.Rendering.SelectList)ViewData["TeacherCode"])
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        }
                                        else
                                        {
                                            <option value="">No teachers data available</option>
                                        }
                                    </select>
                                </div>
                            }
                            else
                            {
                                <!-- For TEACHER USERS: Hide teacher dropdown completely, auto-assign via backend -->
                                <input type="hidden" id="teacherCode" value="">
                                <div class="col-md-6 mb-3">
                                    <!-- Empty space for teacher users - no assignment field shown -->
                                </div>
                            }
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label">Subject</label>
                                <select class="form-select" id="subjectCode">
                                    <option value="">Select Subject (Optional)</option>
                                    @if (ViewBag.IsCenter == true)
                                    {
                                        <!-- For CENTER USERS: Will be loaded after selecting teacher -->
                                    }
                                    else
                                    {
                                        <!-- For TEACHER USERS: Will be loaded after selecting year -->
                                    }
                                </select>
                                @if (ViewBag.IsTeacher == true)
                                {
                                    <small class="text-muted">Select year first to see your subjects</small>
                                }
                                else
                                {
                                    <small class="text-muted">Available subjects will appear after selecting a teacher</small>
                                }
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label">Amount</label>
                                <input type="number" class="form-control" id="scheduleAmount" step="0.01" min="0" placeholder="0.00">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn-modern btn-success" id="saveScheduleBtn">
                        <i class="fas fa-save me-2"></i><span class="btn-text">Save Schedule</span>
                        <div class="spinner-border spinner-border-sm d-none" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Event Details Modal -->
    <div class="modal fade schedule-modal" id="eventDetailsModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-info-circle me-2"></i>Schedule Details
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div id="eventDetailsContent"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn-modern btn-info" id="editEventBtn">
                        <i class="fas fa-edit me-2"></i>Edit
                    </button>
                    <button type="button" class="btn-modern btn-danger" id="deleteEventBtn">
                        <i class="fas fa-trash me-2"></i>Delete
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div class="modal fade schedule-modal" id="deleteConfirmModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-danger">
                    <h5 class="modal-title">
                        <i class="fas fa-exclamation-triangle me-2"></i>Confirm Delete
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="delete-warning">
                        <h5><i class="fas fa-exclamation-triangle me-2"></i>Warning</h5>
                        <p class="mb-0">This action cannot be undone. Are you sure you want to delete this schedule?</p>
                    </div>
                    <div class="schedule-summary" id="deleteScheduleSummary">
                        <!-- Schedule details will be inserted here -->
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn-modern btn-danger" id="confirmDeleteBtn">
                        <i class="fas fa-trash me-2"></i>Delete Schedule
                    </button>
                </div>
            </div>
        </div>
    </div>
}

<!-- Toast Container -->
<div class="toast-container"></div>

<!-- Anti-forgery token for AJAX requests -->
@Html.AntiForgeryToken()

<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>

<script src="~/js/schedule-common.js"></script>
<script>
    // Branch filter for center admins
    window.selectedBranchCode = null;
    function onBranchFilterChanged() {
        var dropdown = document.getElementById('branchFilter');
        window.selectedBranchCode = dropdown ? dropdown.value : null;
        if (window.scheduleManager && typeof window.scheduleManager.loadSchedules === 'function') {
            window.scheduleManager.loadSchedules();
        }
    }

    // Set user context for schedule-common.js
    window.userContext = {
        currentUserRootCode: @Json.Serialize(ViewBag.CurrentUserRootCode),
        userRootName: @Json.Serialize(ViewBag.UserRootName ?? ""),
        isCenter: @Json.Serialize(ViewBag.IsCenter ?? false),
        isTeacher: @Json.Serialize(ViewBag.IsTeacher ?? false),
        branchName: @Json.Serialize(ViewBag.BranchName ?? ""),
        singleCenterCode: @Json.Serialize(ViewBag.SingleCenterCode ?? null),
        groupBranchCode: @Json.Serialize(ViewBag.GroupBranchCode ?? null),
        hasError: @Json.Serialize(ViewBag.Error != null),
        activeEduYearCode: @Json.Serialize(ViewBag.ActiveEduYearCode ?? null)
    };

    // Initialize when DOM is ready
    document.addEventListener('DOMContentLoaded', function() {
        // Wait for scheduleManager to be ready
        setTimeout(() => {
            if (window.scheduleManager) {
                // Hide initial loader after schedules load
                const loader = document.getElementById('initialLoader');
                if (loader) {
                    setTimeout(() => {
                        loader.style.display = 'none';
                    }, 1000);
                }

                // Show welcome message
                if (window.userContext.currentUserRootCode && window.scheduleManager.showToast) {
                    setTimeout(() => {
                        window.scheduleManager.showToast(
                            `Calendar loaded for ${window.userContext.userRootName}`,
                            'success'
                        );
                    }, 1500);
                }
            }
        }, 100);
    });

    // Global functions for Calendar view (using common scheduleManager)
    window.refreshSchedules = () => {
        if (window.scheduleManager && window.scheduleManager.loadSchedules) {
            window.scheduleManager.loadSchedules();
        }
    };

    window.addScheduleForDay = (day) => {
        if (window.scheduleManager && window.scheduleManager.addScheduleForDay) {
            window.scheduleManager.addScheduleForDay(day);
        }
    };

    window.showScheduleDetails = (scheduleCode) => {
        if (window.scheduleManager && window.scheduleManager.showScheduleDetails) {
            window.scheduleManager.showScheduleDetails(scheduleCode);
        }
    };
</script>