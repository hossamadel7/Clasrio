@model centrny.Models.FinancialSummaryReport
@{
    ViewData["Title"] = "Financial Summary Report";
}

<div class="container-fluid mt-4">
    <div class="row">
        <div class="col-12 text-center mb-4">
            <h2><i class="fas fa-chart-line"></i> Financial Summary Report</h2>
            <p class="text-muted">Revenue analysis and financial performance tracking</p>
        </div>
    </div>

    <!-- Filter Panel -->
    <div class="card mb-4">
        <div class="card-body">
            <form method="get" asp-action="FinancialSummary">
                <div class="row align-items-end">
                    <div class="col-md-2">
                        <label for="startDate" class="form-label">Start Date</label>
                        <input type="date" name="startDate" id="startDate" class="form-control" 
                               value="@(Model.StartDate?.ToString("yyyy-MM-dd"))" />
                    </div>

                    <div class="col-md-2">
                        <label for="endDate" class="form-label">End Date</label>
                        <input type="date" name="endDate" id="endDate" class="form-control" 
                               value="@(Model.EndDate?.ToString("yyyy-MM-dd"))" />
                    </div>

                    <div class="col-md-3">
                        <label for="branchCode" class="form-label">Branch</label>
                        <select name="branchCode" id="branchCode" class="form-select">
                            <option value="">All Branches</option>
                            @if (ViewBag.Branches != null)
                            {
                                @foreach (var branch in ViewBag.Branches as List<Branch>)
                                {
                                            <option value="@branch.BranchCode" selected="@(Model.BranchCode == branch.BranchCode)">
                                        @branch.BranchName
                                            </option>
                                }
                            }
                        </select>
                    </div>

                    <div class="col-md-2">
                        <label for="pageSize" class="form-label">Per Page</label>
                        <select name="pageSize" id="pageSize" class="form-select">
                            <option value="20" selected="@(Model.PageSize == 20)">20</option>
                            <option value="50" selected="@(Model.PageSize == 50)">50</option>
                            <option value="100" selected="@(Model.PageSize == 100)">100</option>
                        </select>
                    </div>

                    <div class="col-md-3">
                        <button type="submit" class="btn btn-primary me-2">
                            <i class="fas fa-search"></i> Filter
                        </button>
                        <a href="@Url.Action("FinancialSummary")" class="btn btn-secondary">
                            <i class="fas fa-times"></i> Clear
                        </a>
                    </div>
                </div>

                <!-- Quick Date Range Buttons -->
                <div class="row mt-3">
                    <div class="col-12">
                        <small class="text-muted">Quick ranges:</small>
                        <button type="button" class="btn btn-sm btn-outline-primary ms-2" onclick="setDateRange('week')">This Week</button>
                        <button type="button" class="btn btn-sm btn-outline-primary ms-1" onclick="setDateRange('month')">This Month</button>
                        <button type="button" class="btn btn-sm btn-outline-primary ms-1" onclick="setDateRange('quarter')">This Quarter</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Financial Summary Cards -->
    @if (Model.Classes.Any())
    {
            <div class="row mb-4">
                <div class="col-md-3">
                    <div class="card text-center border-primary">
                        <div class="card-body">
                            <div class="text-primary mb-2">
                                <i class="fas fa-dollar-sign fa-2x"></i>
                            </div>
                            <h5 class="card-title">Total Revenue</h5>
                            <p class="text-primary fs-4">$@Model.TotalRevenue.ToString("N2")</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-center border-warning">
                        <div class="card-body">
                            <div class="text-warning mb-2">
                                <i class="fas fa-user-tie fa-2x"></i>
                            </div>
                            <h5 class="card-title">Teacher Payments</h5>
                            <p class="text-warning fs-4">$@Model.TotalTeacherPayments.ToString("N2")</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-center border-success">
                        <div class="card-body">
                            <div class="text-success mb-2">
                                <i class="fas fa-building fa-2x"></i>
                            </div>
                            <h5 class="card-title">Center Revenue</h5>
                            <p class="text-success fs-4">$@Model.TotalCenterRevenue.ToString("N2")</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-center border-info">
                        <div class="card-body">
                            <div class="text-info mb-2">
                                <i class="fas fa-users fa-2x"></i>
                            </div>
                            <h5 class="card-title">Total Students</h5>
                            <p class="text-info fs-4">@Model.TotalStudents</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Profit Margin Indicator -->
            <div class="row mb-4">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">Profit Analysis</h5>
                        @{
                            var profitMargin = Model.TotalRevenue > 0 ? (Model.TotalCenterRevenue / Model.TotalRevenue * 100) : 0;
                            var marginClass = profitMargin >= 50 ? "bg-success" : profitMargin >= 30 ? "bg-warning text-dark" : "bg-danger";
                        }
                            <span class="badge @marginClass fs-6">
                            @profitMargin.ToString("F1")% Margin
                            </span>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-4">
                                    <p><strong>Average per Class:</strong> $@(Model.Classes.Count > 0 ? (Model.TotalRevenue / Model.Classes.Count).ToString("N2") : "0.00")</p>
                                </div>
                                <div class="col-md-4">
                                    <p><strong>Average per Student:</strong> $@(Model.TotalStudents > 0 ? (Model.TotalRevenue / Model.TotalStudents).ToString("N2") : "0.00")</p>
                                </div>
                                <div class="col-md-4">
                                    <p><strong>Teacher Cost Ratio:</strong> @(Model.TotalRevenue > 0 ? (Model.TotalTeacherPayments / Model.TotalRevenue * 100).ToString("F1") : "0")%</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Financial Details Table -->
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Financial Details (@Model.TotalCount Classes)</h5>
                    <div>
                        <button type="button" class="btn btn-info btn-sm me-2" onclick="exportFinancialPDF()">
                            <i class="fas fa-file-pdf"></i> PDF
                        </button>
                        <button type="button" class="btn btn-success btn-sm" onclick="exportFinancialExcel()">
                            <i class="fas fa-file-excel"></i> Excel
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead class="table-primary">
                                <tr>
                                    <th>Date</th>
                                    <th>Class</th>
                                    <th>Branch</th>
                                    <th>Subject</th>
                                    <th>Teacher</th>
                                    <th>Students</th>
                                    <th>Total Revenue</th>
                                    <th>Teacher Payment</th>
                                    <th>Center Revenue</th>
                                    <th>Margin %</th>
                                </tr>
                            </thead>
                            <tbody>
                            @foreach (var cls in Model.Classes)
                            {
                                var margin = cls.TotalAmount > 0 ? (cls.CenterAmount / cls.TotalAmount * 100) : 0;
                                var marginBadgeClass = margin >= 50 ? "bg-success" : margin >= 30 ? "bg-warning text-dark" : "bg-danger";

                                        <tr>
                                            <td>
                                                <small class="text-muted">
                                            @cls.ClassDate?.ToString("MMM dd, yyyy")
                                                </small>
                                            </td>
                                            <td>
                                                <strong>@cls.ClassName</strong>
                                                <br>
                                                <small class="text-muted">#@cls.ClassCode</small>
                                            </td>
                                            <td>@cls.BranchName</td>
                                            <td>
                                                <span class="badge bg-info">@cls.SubjectName</span>
                                            </td>
                                            <td>@cls.TeacherName</td>
                                            <td class="text-center">
                                                <span class="badge bg-secondary">@cls.NoOfStudents</span>
                                            </td>
                                            <td class="text-end">
                                                <strong class="text-primary">$@cls.TotalAmount.ToString("N2")</strong>
                                            </td>
                                            <td class="text-end">
                                                <span class="text-warning">$@cls.TeacherAmount.ToString("N2")</span>
                                            </td>
                                            <td class="text-end">
                                                <strong class="text-success">$@cls.CenterAmount.ToString("N2")</strong>
                                            </td>
                                            <td class="text-center">
                                                <span class="badge @marginBadgeClass">
                                            @margin.ToString("F1")%
                                                </span>
                                            </td>
                                        </tr>
                            }
                            </tbody>
                            <tfoot class="table-secondary">
                                <tr>
                                    <th colspan="6">Page Totals:</th>
                                    <th class="text-end">$@Model.Classes.Sum(c => c.TotalAmount).ToString("N2")</th>
                                    <th class="text-end">$@Model.Classes.Sum(c => c.TeacherAmount).ToString("N2")</th>
                                    <th class="text-end">$@Model.Classes.Sum(c => c.CenterAmount).ToString("N2")</th>
                                    <th class="text-center">
                                    @{
                                        var pageTotal = Model.Classes.Sum(c => c.TotalAmount);
                                        var pageCenterTotal = Model.Classes.Sum(c => c.CenterAmount);
                                        var pageMargin = pageTotal > 0 ? (pageCenterTotal / pageTotal * 100) : 0;
                                    }
                                    @pageMargin.ToString("F1")%
                                    </th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Pagination -->
        @if (Model.TotalPages > 1)
        {
                    <nav aria-label="Page navigation" class="mt-4">
                        <ul class="pagination justify-content-center">
                    @if (Model.HasPreviousPage)
                    {
                                    <li class="page-item">
                                        <a class="page-link" href="@Url.Action("FinancialSummary", new { 
                                page = Model.CurrentPage - 1, 
                                startDate = Model.StartDate?.ToString("yyyy-MM-dd"), 
                                endDate = Model.EndDate?.ToString("yyyy-MM-dd"), 
                                branchCode = Model.BranchCode,
                                pageSize = Model.PageSize 
                            })">
                                            <i class="fas fa-chevron-left"></i> Previous
                                        </a>
                                    </li>
                    }

                    @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                    {
                        var activeClass = i == Model.CurrentPage ? "active" : "";
                                    <li class="page-item @activeClass">
                                        <a class="page-link" href="@Url.Action("FinancialSummary", new { 
                                page = i, 
                                startDate = Model.StartDate?.ToString("yyyy-MM-dd"), 
                                endDate = Model.EndDate?.ToString("yyyy-MM-dd"), 
                                branchCode = Model.BranchCode,
                                pageSize = Model.PageSize 
                            })">@i</a>
                                    </li>
                    }

                    @if (Model.HasNextPage)
                    {
                                    <li class="page-item">
                                        <a class="page-link" href="@Url.Action("FinancialSummary", new { 
                                page = Model.CurrentPage + 1, 
                                startDate = Model.StartDate?.ToString("yyyy-MM-dd"), 
                                endDate = Model.EndDate?.ToString("yyyy-MM-dd"), 
                                branchCode = Model.BranchCode,
                                pageSize = Model.PageSize 
                            })">
                                            Next <i class="fas fa-chevron-right"></i>
                                        </a>
                                    </li>
                    }
                        </ul>
                    </nav>
        }
    }
    else
    {
            <div class="card text-center py-5">
                <div class="card-body">
                    <div class="text-muted mb-3">
                        <i class="fas fa-search fa-3x"></i>
                    </div>
                    <h4 class="text-muted">No financial data found</h4>
                    <p class="text-muted">Try adjusting your date range or branch filter to see financial information.</p>
                    <a href="@Url.Action("FinancialSummary")" class="btn btn-primary">
                        <i class="fas fa-refresh"></i> Reset Filters
                    </a>
                </div>
            </div>
    }
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    function exportFinancialPDF() {
        const params = new URLSearchParams({
            format: 'pdf',
            startDate: '@Model.StartDate?.ToString("yyyy-MM-dd")',
            endDate: '@Model.EndDate?.ToString("yyyy-MM-dd")',
            branchCode: '@Model.BranchCode'
        });

        window.location.href = '@Url.Action("ExportFinancialSummary", "Reports")?' + params.toString();
    }

    function exportFinancialExcel() {
        const params = new URLSearchParams({
            format: 'excel',
            startDate: '@Model.StartDate?.ToString("yyyy-MM-dd")',
            endDate: '@Model.EndDate?.ToString("yyyy-MM-dd")',
            branchCode: '@Model.BranchCode'
        });

        window.location.href = '@Url.Action("ExportFinancialSummary", "Reports")?' + params.toString();
    }

    // Auto-calculate date ranges
    function setDateRange(range) {
        const today = new Date();
        let startDate, endDate;

        switch(range) {
            case 'week':
                const weekStart = new Date(today.setDate(today.getDate() - today.getDay()));
                startDate = weekStart.toISOString().split('T')[0];
                endDate = new Date().toISOString().split('T')[0];
                break;
            case 'month':
                startDate = new Date(today.getFullYear(), today.getMonth(), 1).toISOString().split('T')[0];
                endDate = new Date().toISOString().split('T')[0];
                break;
            case 'quarter':
                const quarterStart = new Date(today.getFullYear(), Math.floor(today.getMonth() / 3) * 3, 1);
                startDate = quarterStart.toISOString().split('T')[0];
                endDate = new Date().toISOString().split('T')[0];
                break;
        }

        document.getElementById('startDate').value = startDate;
        document.getElementById('endDate').value = endDate;
    }
</script>