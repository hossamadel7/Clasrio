@using Microsoft.Extensions.Localization
@inject IStringLocalizerFactory LocalizerFactory
@{
    var Localizer = LocalizerFactory.Create("Reports", System.Reflection.Assembly.GetExecutingAssembly().GetName().Name);
    ViewData["Title"] = Localizer["FinancialSummaryReport"];
    var classesList = Model.Classes as IEnumerable<centrny.Models.FinancialSummaryDto>;
    var isTeacher = ViewBag.IsTeacher as bool? ?? false;
}
<link rel="stylesheet" href="~/css/Hamody.css" />

<style>
    /* Make the footer of the financial data table use the same gradient as the header */
    .financial-view .gradient-table tfoot tr {
        background: var(--primary-gradient-horizontal) !important;
    }

    .financial-view .gradient-table tfoot th,
    .financial-view .gradient-table tfoot td {
        background: transparent !important;
        color: #fff !important;
        font-size: 1.12rem;
        font-weight: 700;
        border: none !important;
        text-align: center;
    }
    /* Remove Bootstrap .table-secondary background for tfoot */
    .financial-view .gradient-table tfoot.table-secondary tr,
    .financial-view .gradient-table tfoot.table-secondary th,
    .financial-view .gradient-table tfoot.table-secondary td {
        background: linear-gradient(90deg, #012852 0%, #6c8be9 100%) !important;
    }
</style>

<div class="container mt-4" style="max-width:1400px;">
    <!-- Unified Gradient Header (Centered, Full Width) -->
    <div class="questions-header" style="margin: 0 auto; max-width: 900px;">
        <h2 style="width: 100%; text-align: center;">
            <i class="fas fa-chart-line"></i> 
            @if (isTeacher)
            {
                @Localizer["MyRevenueReport"]
            }
            else
            {
                @Localizer["FinancialSummaryReport"]
            }
        </h2>
        <p class="text-muted mt-2" style="font-size:1.15em; text-align: center;">
            @if (isTeacher)
            {
                @Localizer["MyRevenueSubtitle"]
            }
            else
            {
                @Localizer["FinancialSummarySubtitle"]
            }
        </p>
    </div>

    <!-- Filter Panel -->
    <div class="filter-panel card mb-4" style="border-radius: var(--border-radius); box-shadow: var(--shadow);">
        <div class="card-body">
            <form method="get" asp-action="FinancialSummary">
                <div class="row align-items-end g-2">
                    <div class="col-md-2">
                        <label for="startDate" class="form-label">@Localizer["StartDate"]</label>
                        <input type="date" name="startDate" id="startDate" class="form-control"
                               value="@(Model.StartDate?.ToString("yyyy-MM-dd"))" />
                    </div>
                    <div class="col-md-2">
                        <label for="endDate" class="form-label">@Localizer["EndDate"]</label>
                        <input type="date" name="endDate" id="endDate" class="form-control"
                               value="@(Model.EndDate?.ToString("yyyy-MM-dd"))" />
                    </div>
                    @if (!isTeacher)
                    {
                        <div class="col-md-3">
                            <label for="branchCode" class="form-label">@Localizer["Branch"]</label>
                            <select name="branchCode" id="branchCode" class="form-select modern-input styled-select">
                                <option value="">@Localizer["AllBranches"]</option>
                                @if (ViewBag.Branches != null)
                                {
                                    @foreach (var branch in ViewBag.Branches as List<Branch>)
                                    {
                                        <option value="@branch.BranchCode" selected="@(Model.BranchCode == branch.BranchCode)">
                                            @branch.BranchName
                                        </option>
                                    }
                                }
                            </select>
                        </div>
                    }
                    <div class="col-md-2">
                        <label for="pageSize" class="form-label">@Localizer["PerPage"]</label>
                        <select name="pageSize" id="pageSize" class="form-select modern-input styled-select">
                            <option value="20" selected="@(Model.PageSize == 20)">20</option>
                            <option value="50" selected="@(Model.PageSize == 50)">50</option>
                            <option value="100" selected="@(Model.PageSize == 100)">100</option>
                        </select>
                    </div>
                    <div class="col-md-3 d-flex align-items-end">
                        <button type="submit" class="modern-btn w-50 me-2" style="background: var(--primary-gradient-horizontal);">
                            <i class="fas fa-search"></i> @Localizer["Filter"]
                        </button>
                        <a href="@Url.Action("FinancialSummary")" class="modern-btn w-50" style="background: var(--info-gradient);">
                            <i class="fas fa-times"></i> @Localizer["Clear"]
                        </a>
                    </div>
                </div>
                <div class="row mt-3">
                    <div class="col-12">
                        <small class="text-muted">@Localizer["QuickRanges"]</small>
                        <button type="button" class="btn btn-sm btn-outline-primary ms-2" onclick="setDateRange('week')">@Localizer["ThisWeek"]</button>
                        <button type="button" class="btn btn-sm btn-outline-primary ms-1" onclick="setDateRange('month')">@Localizer["ThisMonth"]</button>
                        <button type="button" class="btn btn-sm btn-outline-primary ms-1" onclick="setDateRange('quarter')">@Localizer["ThisQuarter"]</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Financial Summary Cards -->
    @if (classesList != null && classesList.Any())
    {
        <div class="row mb-4 gx-4">
            <div class="col-md-@(isTeacher ? "6" : "3") mb-3">
                <div class="card text-center" style="border-radius: var(--border-radius); box-shadow: var(--shadow-lg); border: none;">
                    <div class="card-body">
                        <div class="text-primary mb-2">
                            <i class="fas fa-dollar-sign fa-2x"></i>
                        </div>
                        <h5 class="card-title">@Localizer["TotalRevenue"]</h5>
                        <p class="fs-4" style="color:var(--primary-color);font-weight:700;">
                            @Localizer["CurrencySymbol"]@Model.TotalRevenue.ToString("N2")
                        </p>
                    </div>
                </div>
            </div>
            
            @if (!isTeacher)
            {
                <div class="col-md-3 mb-3">
                    <div class="card text-center" style="border-radius: var(--border-radius); box-shadow: var(--shadow-lg); border: none;">
                        <div class="card-body">
                            <div class="text-warning mb-2">
                                <i class="fas fa-user-tie fa-2x"></i>
                            </div>
                            <h5 class="card-title">@Localizer["TeacherPayments"]</h5>
                            <p class="fs-4" style="color:var(--warning-color);font-weight:700;">
                                @Localizer["CurrencySymbol"]@Model.TotalTeacherPayments.ToString("N2")
                            </p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 mb-3">
                    <div class="card text-center" style="border-radius: var(--border-radius); box-shadow: var(--shadow-lg); border: none;">
                        <div class="card-body">
                            <div class="text-success mb-2">
                                <i class="fas fa-building fa-2x"></i>
                            </div>
                            <h5 class="card-title">@Localizer["CenterRevenue"]</h5>
                            <p class="fs-4" style="color:var(--success-color);font-weight:700;">
                                @Localizer["CurrencySymbol"]@Model.TotalCenterRevenue.ToString("N2")
                            </p>
                        </div>
                    </div>
                </div>
            }
            
            <div class="col-md-@(isTeacher ? "6" : "3") mb-3">
                <div class="card text-center" style="border-radius: var(--border-radius); box-shadow: var(--shadow-lg); border: none;">
                    <div class="card-body">
                        <div class="text-info mb-2">
                            <i class="fas fa-users fa-2x"></i>
                        </div>
                        <h5 class="card-title">@Localizer["TotalStudents"]</h5>
                        <p class="fs-4" style="color:var(--info-color);font-weight:700;">@Model.TotalStudents</p>
                    </div>
                </div>
            </div>
        </div>

        @if (!isTeacher)
        {
            <!-- Profit Margin Indicator (Hidden for Teachers) -->
            <div class="row mb-4">
                <div class="col-12">
                    <div class="card" style="border-radius: var(--border-radius); box-shadow: var(--shadow-lg);">
                        <div class="card-header d-flex justify-content-between align-items-center" style="background:var(--primary-gradient-light);border-radius:var(--border-radius) var(--border-radius) 0 0;">
                            <h5 class="mb-0">@Localizer["ProfitAnalysis"]</h5>
                            @{
                                var profitMargin = Model.TotalRevenue > 0 ? (Model.TotalCenterRevenue / Model.TotalRevenue * 100) : 0;
                                var marginClass = profitMargin >= 50 ? "bg-success" : profitMargin >= 30 ? "bg-warning text-dark" : "bg-danger";
                            }
                            <span class="badge @marginClass fs-6">
                                @profitMargin.ToString("F1")% @Localizer["Margin"]
                            </span>
                        </div>
                        <div class="card-body">
                            <div class="row text-center">
                                <div class="col-md-4 mb-2">
                                    <p><strong>@Localizer["AvgPerClass"]:</strong> @Localizer["CurrencySymbol"]@(classesList.Count() > 0 ? (Model.TotalRevenue / classesList.Count()).ToString("N2") : "0.00")</p>
                                </div>
                                <div class="col-md-4 mb-2">
                                    <p><strong>@Localizer["AvgPerStudent"]:</strong> @Localizer["CurrencySymbol"]@(Model.TotalStudents > 0 ? (Model.TotalRevenue / Model.TotalStudents).ToString("N2") : "0.00")</p>
                                </div>
                                <div class="col-md-4 mb-2">
                                    <p><strong>@Localizer["TeacherCostRatio"]:</strong> @(Model.TotalRevenue > 0 ? (Model.TotalTeacherPayments / Model.TotalRevenue * 100).ToString("F1") : "0")%</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }

        <!-- Financial Details Table -->
        <div class="table-card card mb-4" style="border-radius: var(--border-radius); box-shadow: var(--shadow-lg);">
            <div class="card-header d-flex justify-content-between align-items-center" style="background:var(--primary-gradient-light);border-radius:var(--border-radius) var(--border-radius) 0 0;">
                <h5 class="mb-0">
                    @if (isTeacher)
                    {
                        @($"{Localizer["MyClassRevenue"]} ({Model.TotalCount} {Localizer["Classes"]})")
                    }
                    else
                    {
                        @($"{Localizer["FinancialDetails"]} ({Model.TotalCount} {Localizer["Classes"]})")
                    }
                </h5>
                <div>
                    <button type="button" class="modern-btn btn-report-info btn-sm me-2" onclick="exportFinancialPDF()">
                        <i class="fas fa-file-pdf"></i> PDF
                    </button>
                    <button type="button" class="modern-btn btn-report-success btn-sm" onclick="exportFinancialExcel()">
                        <i class="fas fa-file-excel"></i> Excel
                    </button>
                </div>
            </div>
            <div class="card-body" style="padding:1.7rem;">
                <div class="table-responsive">
                    <!-- Add financial-view wrapper for table -->
                    <div class="financial-view">
                        <table class="gradient-table table table-hover">
                            <thead>
                                <tr>
                                    <th>@Localizer["Date"]</th>
                                    <th>@Localizer["Class"]</th>
                                    <th>@Localizer["Branch"]</th>
                                    <th>@Localizer["Subject"]</th>
                                    <th>@Localizer["Teacher"]</th>
                                    <th>@Localizer["Students"]</th>
                                    <th>@Localizer["TotalRevenue"]</th>
                                    @if (!isTeacher)
                                    {
                                        <th>@Localizer["TeacherPayments"]</th>
                                        <th>@Localizer["CenterRevenue"]</th>
                                        <th>@Localizer["MarginPercent"]</th>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var cls in classesList)
                                {
                                    var margin = cls.TotalAmount > 0 ? (cls.CenterAmount / cls.TotalAmount * 100) : 0;
                                    var marginBadgeClass = margin >= 50 ? "bg-success" : margin >= 30 ? "bg-warning text-dark" : "bg-danger";
                                    <tr>
                                        <td>
                                            <small class="text-muted">
                                                @cls.ClassDate?.ToString("MMM dd, yyyy")
                                            </small>
                                        </td>
                                        <td>
                                            <strong>@cls.ClassName</strong>
                                            <br>
                                            <small class="text-muted">#@cls.ClassCode</small>
                                        </td>
                                        <td>@cls.BranchName</td>
                                        <td>
                                            <span class="badge bg-info">@cls.SubjectName</span>
                                        </td>
                                        <td>@cls.TeacherName</td>
                                        <td class="text-center">
                                            <span class="badge bg-secondary">@cls.NoOfStudents</span>
                                        </td>
                                        <td class="text-end">
                                            <strong style="color:var(--primary-color);font-weight:700;">@Localizer["CurrencySymbol"]@cls.TotalAmount.ToString("N2")</strong>
                                        </td>
                                        @if (!isTeacher)
                                        {
                                            <td class="text-end">
                                                <span style="color:var(--warning-color);font-weight:700;">@Localizer["CurrencySymbol"]@cls.TeacherAmount.ToString("N2")</span>
                                            </td>
                                            <td class="text-end">
                                                <strong style="color:var(--success-color);font-weight:700;">@Localizer["CurrencySymbol"]@cls.CenterAmount.ToString("N2")</strong>
                                            </td>
                                            <td class="text-center">
                                                <span class="badge @marginBadgeClass">
                                                    @margin.ToString("F1")%
                                                </span>
                                            </td>
                                        }
                                    </tr>
                                }
                            </tbody>
                            <tfoot class="table-secondary">
                                @if (!isTeacher)
                                {
                                    var pageTotal = classesList.Sum(c => c.TotalAmount);
                                    var pageCenterTotal = classesList.Sum(c => c.CenterAmount);
                                    var pageMargin = pageTotal > 0 ? (pageCenterTotal / pageTotal * 100) : 0;
                                    <tr>
                                        <th colspan="6">@Localizer["PageTotals"]:</th>
                                        <th class="text-end">@Localizer["CurrencySymbol"]@(classesList.Sum(c => c.TotalAmount).ToString("N2"))</th>
                                        <th class="text-end">@Localizer["CurrencySymbol"]@(classesList.Sum(c => c.TeacherAmount).ToString("N2"))</th>
                                        <th class="text-end">@Localizer["CurrencySymbol"]@(classesList.Sum(c => c.CenterAmount).ToString("N2"))</th>
                                        <th class="text-center">
                                            @pageMargin.ToString("F1")%
                                        </th>
                                    </tr>
                                }
                                else
                                {
                                    <tr>
                                        <th colspan="6">@Localizer["PageTotals"]:</th>
                                        <th class="text-end">@Localizer["CurrencySymbol"]@(classesList.Sum(c => c.TotalAmount).ToString("N2"))</th>
                                    </tr>
                                }
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Pagination -->
        @if (Model.TotalPages > 1)
        {
            <nav aria-label="Page navigation" class="mt-4">
                <ul class="pagination justify-content-center" style="background:var(--primary-gradient-light);border-radius:2em;padding:0.5em 1.2em;box-shadow:0 2px 12px rgba(108,92,231,0.08);">
                    @if (Model.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("FinancialSummary", new {
                            page = Model.CurrentPage - 1,
                            startDate = Model.StartDate?.ToString("yyyy-MM-dd"),
                            endDate = Model.EndDate?.ToString("yyyy-MM-dd"),
                            branchCode = Model.BranchCode,
                            pageSize = Model.PageSize
                        })">
                                <i class="fas fa-chevron-left"></i> @Localizer["Previous"]
                            </a>
                        </li>
                    }
                    @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                    {
                        var activeClass = i == Model.CurrentPage ? "active" : "";
                        <li class="page-item @activeClass">
                            <a class="page-link" href="@Url.Action("FinancialSummary", new {
                            page = i,
                            startDate = Model.StartDate?.ToString("yyyy-MM-dd"),
                            endDate = Model.EndDate?.ToString("yyyy-MM-dd"),
                            branchCode = Model.BranchCode,
                            pageSize = Model.PageSize
                        })">@i</a>
                        </li>
                    }
                    @if (Model.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("FinancialSummary", new {
                            page = Model.CurrentPage + 1,
                            startDate = Model.StartDate?.ToString("yyyy-MM-dd"),
                            endDate = Model.EndDate?.ToString("yyyy-MM-dd"),
                            branchCode = Model.BranchCode,
                            pageSize = Model.PageSize
                        })">
                                @Localizer["Next"] <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        }
    }
    else
    {
        <div class="card text-center py-5" style="border-radius:var(--border-radius);box-shadow:var(--shadow-lg);">
            <div class="card-body">
                <div class="text-muted mb-3">
                    <i class="fas fa-search fa-3x"></i>
                </div>
                <h4 class="text-muted">@Localizer["NoFinancialDataFound"]</h4>
                <p class="text-muted">@Localizer["FinancialNoDataHint"]</p>
                <a href="@Url.Action("FinancialSummary")" class="modern-btn" style="background:var(--primary-gradient-horizontal);">
                    <i class="fas fa-refresh"></i> @Localizer["ResetFilters"]
                </a>
            </div>
        </div>
    }
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    function exportFinancialPDF() {
        const params = new URLSearchParams({
            format: 'pdf',
            startDate: '@Model.StartDate?.ToString("yyyy-MM-dd")',
            endDate: '@Model.EndDate?.ToString("yyyy-MM-dd")',
            branchCode: '@Model.BranchCode'
        });

        window.location.href = '@Url.Action("ExportFinancialSummary", "Reports")?' + params.toString();
    }

    function exportFinancialExcel() {
        const params = new URLSearchParams({
            format: 'excel',
            startDate: '@Model.StartDate?.ToString("yyyy-MM-dd")',
            endDate: '@Model.EndDate?.ToString("yyyy-MM-dd")',
            branchCode: '@Model.BranchCode'
        });

        window.location.href = '@Url.Action("ExportFinancialSummary", "Reports")?' + params.toString();
    }

    // Auto-calculate date ranges
    function setDateRange(range) {
        const today = new Date();
        let startDate, endDate;

        switch (range) {
            case 'week':
                const weekStart = new Date(today.setDate(today.getDate() - today.getDay()));
                startDate = weekStart.toISOString().split('T')[0];
                endDate = new Date().toISOString().split('T')[0];
                break;
            case 'month':
                startDate = new Date(today.getFullYear(), today.getMonth(), 1).toISOString().split('T')[0];
                endDate = new Date().toISOString().split('T')[0];
                break;
            case 'quarter':
                const quarterStart = new Date(today.getFullYear(), Math.floor(today.getMonth() / 3) * 3, 1);
                startDate = quarterStart.toISOString().split('T')[0];
                endDate = new Date().toISOString().split('T')[0];
                break;
        }

        document.getElementById('startDate').value = startDate;
        document.getElementById('endDate').value = endDate;
    }
</script>